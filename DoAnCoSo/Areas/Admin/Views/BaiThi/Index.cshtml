@model IEnumerable<DoAnCoSo.Models.BaiThi>

@{
    ViewData["Title"] = "Exam list";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/css/add_exam/add_exam.css" rel="stylesheet" />

<div class="exam-dashboard">
    <div class="dashboard-header">
        <h1 class="dashboard-title">
            <i class="fas fa-book-open mr-2"></i>Exam List
        </h1>

        <a href="@Url.Action("Add")" class="add-exam-btn">
            <i class="fas fa-plus"></i>
            Add New Exam
        </a>
    </div>

    <div class="table-responsive">
        <table class="exam-table">
            <thead>
                <tr>
                    <th>Exam ID</th>
                    <th>Exam Name</th>
                    <th>Duration (minute)</th>
                    <th>Number of Questions</th>
                    <th>Description</th>
                    <th>Create Time</th>
                    <th>Randomize</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Any())
                {
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.MaDe</td>
                            <td>
                                <strong>@item.TenBaiThi</strong>
                            </td>
                            <td>
                                <span class="status-badge" style="background: #e3f2fd; color: #1976d2">
                                    <i class="fas fa-clock mr-1"></i>
                                    @item.ThoiGianLamBai min
                                </span>
                            </td>
                            <td>
                                <span class="status-badge" style="background: #e8f5e9; color: #2e7d32">
                                    <i class="fas fa-question-circle mr-1"></i>
                                    @item.SoLuongCauHoi questions
                                </span>
                            </td>
                            <td>
                                <span class="text-muted">@item.Mota</span>
                            </td>
                            <td>
                                <span class="text-muted">@item.CreateTime</span>
                            </td>
                            <td>
                                <span><input type="checkbox" class="randomize-checkbox" style="width: 20px;" data-id="@item.Id" @(item.RandomizeQuestion ? "checked" : "") /></span>
                            </td>
                            <td>
                                <a href="@Url.Action("DisplayQuestions", "BaiThi", new { id = item.Id })" class="action-btn btn-add-questions"> 
                                    <i class="fas fa-plus"></i> 
                                </a> 
                                <a href="@Url.Action("Update", "BaiThi", new { id = item.Id })" class="action-btn btn-edit-exam"> 
                                    <i class="fas fa-pen"></i> 
                                </a> 
                                <a href="javascript:void(0);" onclick="confirmDelete(@item.Id)" class="action-btn btn-delete-exam"> 
                                    <i class="fas fa-trash"></i> 
                                </a>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="6" class="empty-state">
                            <i class="fas fa-inbox fa-3x mb-3"></i>
                            <p>Nothing's here.</p>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <a href="@Url.Action("Index", "Account")" class="back-link">
        <i class="fas fa-arrow-left"></i>
        Back
    </a>
</div>
@section Scripts {
     <script>document.querySelectorAll('.randomize-checkbox').forEach(function (checkbox) { 
         checkbox.addEventListener('change', function () {
             const examId = this.getAttribute('data-id'); 
             const isChecked = this.checked; 
             
             fetch('/Admin/BaiThi/ToggleRandomize', { 
                 method: 'POST', 
                 headers: { 
                     'Content-Type': 'application/json', 
                     'X-CSRF-TOKEN': document.querySelector('input[name="__RequestVerificationToken"]').value 
                 }, 
                 body: JSON.stringify({ id: examId, randomize: isChecked }) 
             }).then(response => { 
                 if (response.ok) { 
                     console.log('Randomize updated'); 
                 } else { 
                     console.error('Failed to update randomize'); 
                 } 
             }).catch(error => { 
                 console.error('Error:', error); 
             }); 
         }); 
     });

    function confirmDelete(id) { 
        if (confirm('Are you sure you want to delete this exam?')) { 
                window.location.href = '@Url.Action("DeleteConfirmed", "BaiThi", new { area = "Admin" })/' + id;
        } 
    }
    </script>
}